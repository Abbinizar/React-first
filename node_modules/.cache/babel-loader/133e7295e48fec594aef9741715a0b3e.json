{"ast":null,"code":"var _jsxFileName = \"/Users/abbinizar/Documents/Code/React-first/src/routes/Pagination/index.js\";\nimport React, { Component } from \"react\";\nimport styles from \"./styles.css\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: null,\n      total: null,\n      per_page: null,\n      current_page: 1\n    };\n\n    this.makeHttpRequestWithPage = async pageNumber => {\n      const response = await fetch(`https://reqres.in/api/users?page=${pageNumber}`, {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const data = await response.json();\n      this.setState({\n        users: data.data,\n        total: data.total,\n        per_page: data.per_page,\n        current_page: data.page\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.makeHttpRequestWithPage(1);\n  }\n\n  render() {\n    let users, renderPageNumbers;\n\n    if (this.state.users !== null) {\n      users = this.state.users.map(user => React.createElement(\"tr\", {\n        key: user.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, user.id), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, user.first_name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, user.last_name)));\n    }\n\n    const pageNumbers = [];\n\n    if (this.state.total !== null) {\n      for (let i = 1; i <= Math.ceil(this.state.total / this.state.per_page); i++) {\n        pageNumbers.push(i);\n      }\n\n      renderPageNumbers = pageNumbers.map(number => {\n        let classes = this.state.current_page === number ? styles.active : \"\";\n        return React.createElement(\"span\", {\n          key: number,\n          className: classes,\n          onClick: () => this.makeHttpRequestWithPage(number),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, number);\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: styles.app,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: styles.table,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"S/N\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"First Name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Last Name\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, users)), React.createElement(\"div\", {\n      className: styles.pagination,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      onClick: () => this.makeHttpRequestWithPage(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"\\xAB\"), renderPageNumbers, React.createElement(\"span\", {\n      onClick: () => this.makeHttpRequestWithPage(1),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"\\xBB\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/abbinizar/Documents/Code/React-first/src/routes/Pagination/index.js"],"names":["React","Component","styles","App","state","users","total","per_page","current_page","makeHttpRequestWithPage","pageNumber","response","fetch","method","headers","Accept","data","json","setState","page","componentDidMount","render","renderPageNumbers","map","user","id","first_name","last_name","pageNumbers","i","Math","ceil","push","number","classes","active","app","table","pagination"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styles from \"./styles.css\";\n\nclass App extends Component {\n  state = {\n    users: null,\n    total: null,\n    per_page: null,\n    current_page: 1\n  };\n\n  componentDidMount() {\n    this.makeHttpRequestWithPage(1);\n  }\n\n  makeHttpRequestWithPage = async pageNumber => {\n    const response = await fetch(\n      `https://reqres.in/api/users?page=${pageNumber}`,\n      {\n        method: \"GET\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    );\n\n    const data = await response.json();\n\n    this.setState({\n      users: data.data,\n      total: data.total,\n      per_page: data.per_page,\n      current_page: data.page\n    });\n  };\n\n  render() {\n    let users, renderPageNumbers;\n\n    if (this.state.users !== null) {\n      users = this.state.users.map(user => (\n        <tr key={user.id}>\n          <td>{user.id}</td>\n          <td>{user.first_name}</td>\n          <td>{user.last_name}</td>\n        </tr>\n      ));\n    }\n\n    const pageNumbers = [];\n    if (this.state.total !== null) {\n      for (\n        let i = 1;\n        i <= Math.ceil(this.state.total / this.state.per_page);\n        i++\n      ) {\n        pageNumbers.push(i);\n      }\n\n      renderPageNumbers = pageNumbers.map(number => {\n        let classes = this.state.current_page === number ? styles.active : \"\";\n\n        return (\n          <span\n            key={number}\n            className={classes}\n            onClick={() => this.makeHttpRequestWithPage(number)}\n          >\n            {number}\n          </span>\n        );\n      });\n    }\n\n    return (\n      <div className={styles.app}>\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>S/N</th>\n              <th>First Name</th>\n              <th>Last Name</th>\n            </tr>\n          </thead>\n          <tbody>{users}</tbody>\n        </table>\n\n        <div className={styles.pagination}>\n          <span onClick={() => this.makeHttpRequestWithPage(1)}>&laquo;</span>\n          {renderPageNumbers}\n          <span onClick={() => this.makeHttpRequestWithPage(1)}>&raquo;</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}