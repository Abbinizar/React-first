{"ast":null,"code":"import _slicedToArray from \"/Users/abbinizar/Documents/Code/React-first/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/abbinizar/Documents/Code/React-first/src/routes/State/useEffect.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\nconst Login = ({\n  gotoDashboard,\n  executeLogin\n}) => {\n  return React.createElement(\"div\", {\n    className: \"login\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, \"Login page\"), React.createElement(\"button\", {\n    onClick: gotoDashboard,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, \"GO TO DASHBOARD\"), React.createElement(\"button\", {\n    onClick: executeLogin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"LOGIN\"));\n};\n\nconst Dashboard = ({\n  isLoggedIn,\n  gotoLogin,\n  executeLogout\n}) => {\n  useEffect(() => {\n    if (!isLoggedIn) gotoLogin();\n  }, [isLoggedIn, gotoLogin]);\n  return React.createElement(\"div\", {\n    className: \"dashboard\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"di\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"button\", {\n    onClick: executeLogout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Logout\"));\n};\n\nexport default function App() {\n  const _useState = useState(\"LOGIN\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        current = _useState2[0],\n        setCurrent = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        isLoggedin = _useState4[0],\n        setIsLoggedin = _useState4[1];\n\n  useEffect(() => {\n    if (isLoggedin) setCurrent(\"DASHBOARD\");else setCurrent(\"LOGIN\");\n  }, [isLoggedin]);\n\n  const renderRoute = currentRoute => {\n    switch (currentRoute) {\n      case \"LOGIN\":\n        return React.createElement(Login, {\n          gotoDashboard: () => setCurrent(\"DASHBOARD\"),\n          executeLogin: () => setIsLoggedin(true),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        });\n\n      case \"DASHBOARD\":\n        return React.createElement(Dashboard, {\n          isLoggedIn: isLoggedin,\n          gotoLogin: () => setCurrent(\"LOGIN\"),\n          executeLogout: () => setIsLoggedin(false),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n\n      default:\n        return null;\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"Apps\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, renderRoute(current));\n}","map":{"version":3,"sources":["/Users/abbinizar/Documents/Code/React-first/src/routes/State/useEffect.js"],"names":["React","useState","useEffect","Login","gotoDashboard","executeLogin","Dashboard","isLoggedIn","gotoLogin","executeLogout","App","current","setCurrent","isLoggedin","setIsLoggedin","renderRoute","currentRoute"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,cAAP;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAqC;AACjD,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAQ,IAAA,OAAO,EAAED,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE;AAAQ,IAAA,OAAO,EAAEC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,CADF;AAOD,CARD;;AAUA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,SAAd;AAAyBC,EAAAA;AAAzB,CAAD,KAA8C;AAC9DP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACK,UAAL,EAAiBC,SAAS;AAC3B,GAFQ,EAEN,CAACD,UAAD,EAAaC,SAAb,CAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,IAAA,OAAO,EAAEC,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF;AAMD,CAXD;;AAaA,eAAe,SAASC,GAAT,GAAe;AAAA,oBACET,QAAQ,CAAC,OAAD,CADV;AAAA;AAAA,QACrBU,OADqB;AAAA,QACZC,UADY;;AAAA,qBAEQX,QAAQ,CAAC,KAAD,CAFhB;AAAA;AAAA,QAErBY,UAFqB;AAAA,QAETC,aAFS;;AAI5BZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,UAAJ,EAAgBD,UAAU,CAAC,WAAD,CAAV,CAAhB,KACKA,UAAU,CAAC,OAAD,CAAV;AACN,GAHQ,EAGN,CAACC,UAAD,CAHM,CAAT;;AAKA,QAAME,WAAW,GAAGC,YAAY,IAAI;AAClC,YAAQA,YAAR;AACE,WAAK,OAAL;AACE,eACE,oBAAC,KAAD;AACE,UAAA,aAAa,EAAE,MAAMJ,UAAU,CAAC,WAAD,CADjC;AAEE,UAAA,YAAY,EAAE,MAAME,aAAa,CAAC,IAAD,CAFnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAMF,WAAK,WAAL;AACE,eACE,oBAAC,SAAD;AACE,UAAA,UAAU,EAAED,UADd;AAEE,UAAA,SAAS,EAAE,MAAMD,UAAU,CAAC,OAAD,CAF7B;AAGE,UAAA,aAAa,EAAE,MAAME,aAAa,CAAC,KAAD,CAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAOF;AACE,eAAO,IAAP;AAjBJ;AAmBD,GApBD;;AAsBA,SAAO;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBC,WAAW,CAACJ,OAAD,CAAlC,CAAP;AACD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./styles.css\";\n\nconst Login = ({ gotoDashboard, executeLogin }) => {\n  return (\n    <div className=\"login\">\n      <div>Login page</div>\n      <button onClick={gotoDashboard}>GO TO DASHBOARD</button>\n      <button onClick={executeLogin}>LOGIN</button>\n    </div>\n  );\n};\n\nconst Dashboard = ({ isLoggedIn, gotoLogin, executeLogout }) => {\n  useEffect(() => {\n    if (!isLoggedIn) gotoLogin();\n  }, [isLoggedIn, gotoLogin]);\n\n  return (\n    <div className=\"dashboard\">\n      <di>Dashboard</di>\n      <button onClick={executeLogout}>Logout</button>\n    </div>\n  );\n};\n\nexport default function App() {\n  const [current, setCurrent] = useState(\"LOGIN\");\n  const [isLoggedin, setIsLoggedin] = useState(false);\n\n  useEffect(() => {\n    if (isLoggedin) setCurrent(\"DASHBOARD\");\n    else setCurrent(\"LOGIN\");\n  }, [isLoggedin]);\n\n  const renderRoute = currentRoute => {\n    switch (currentRoute) {\n      case \"LOGIN\":\n        return (\n          <Login\n            gotoDashboard={() => setCurrent(\"DASHBOARD\")}\n            executeLogin={() => setIsLoggedin(true)}\n          />\n        );\n      case \"DASHBOARD\":\n        return (\n          <Dashboard\n            isLoggedIn={isLoggedin}\n            gotoLogin={() => setCurrent(\"LOGIN\")}\n            executeLogout={() => setIsLoggedin(false)}\n          />\n        );\n      default:\n        return null;\n    }\n  };\n\n  return <div className=\"Apps\">{renderRoute(current)}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}